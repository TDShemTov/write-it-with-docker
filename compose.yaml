services:
  python-app:
    build:
      context: .
    container_name: python-app
    restart: unless-stopped
    init: true
    ports:
      - "5000:5000"  # Flask default port exposed in Dockerfile
    # env_file: ./.env  # Uncomment if .env file exists
    depends_on:
      - mongo
    networks:
      - appnet
    # The app uses Azure Cosmos MongoDB in production, but for local dev we use MongoDB

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"  # Default MongoDB port
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    # volumes:
    #   - mongo-data:/data/db  # Uncomment for persistent data
    # For local development only; production uses Azure Cosmos MongoDB

networks:
  appnet:
    driver: bridge

# volumes:
#   mongo-data:  # Uncomment for persistent MongoDB data
